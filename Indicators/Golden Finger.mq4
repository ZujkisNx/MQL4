/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "zx815@126.com"
#property link      "zx815@126.com"

#property indicator_chart_window
#property indicator_buffers 2
#property indicator_color1 Aqua
#property indicator_color2 Gold

extern int RISK = 6; //original default value 4

input bool Alert_Enabled=false;

double g_ibuf_80[];
double g_ibuf_84[];
int gi_88 = 0;
int gi_92 = 0;

int init() {
   SetIndexStyle(0, DRAW_ARROW, STYLE_SOLID, 2);
   SetIndexArrow(0, 159);
   SetIndexBuffer(0, g_ibuf_80);
   SetIndexEmptyValue(0, 0);
   SetIndexStyle(1, DRAW_ARROW, STYLE_SOLID, 2);
   SetIndexArrow(1, 159);
   SetIndexBuffer(1, g_ibuf_84);
   SetIndexEmptyValue(1, 0);
   return (0);
}

int deinit() {
   return (0);
}

int start() {
   double ld_0;
   double ld_8;
   int l_count_48;
   int li_52;
   int li_56;
   int li_60;
   double ld_68;
   double ld_76;
   double ld_84;
   double ld_92;
   double lda_100[500][2];
   double ld_16 = 10;
   double ld_32 = 70;
   double ld_40 = 30;
   int li_104 = IndicatorCounted();
   ld_16 = RISK * 2 + 3;
   ld_32 = RISK + 67;
   ld_40 = 33 - RISK;
   double l_period_24 = ld_16;
   if (li_104 < 0) return (-1);
   if (li_104 > 0) li_104--;
   int li_112 = Bars - li_104 - 1;
   for (int li_108 = li_112; li_108 > 0; li_108--) {
      li_52 = li_108;
      ld_68 = 0;
      ld_76 = 0;
      for (li_52 = li_108; li_52 <= li_108 + 9; li_52++) ld_76 += MathAbs(High[li_52] - Low[li_52]);
      ld_68 = ld_76 / 10.0;
      li_52 = li_108;
      l_count_48 = 0;
      while (li_52 < li_108 + 9 && l_count_48 < 1) {
         if (MathAbs(Open[li_52] - (Close[li_52 + 1])) >= 2.0 * ld_68) l_count_48++;
         li_52++;
      }
      if (l_count_48 >= 1) li_56 = li_52;
      else li_56 = -1;
      li_52 = li_108;
      l_count_48 = 0;
      while (li_52 < li_108 + 6 && l_count_48 < 1) {
         if (MathAbs(Close[li_52 + 3] - Close[li_52]) >= 4.6 * ld_68) l_count_48++;
         li_52++;
      }
      if (l_count_48 >= 1) li_60 = li_52;
      else li_60 = -1;
      if (li_56 > -1) l_period_24 = 3;
      else l_period_24 = ld_16;
      if (li_60 > -1) l_period_24 = 4;
      else l_period_24 = ld_16;
      ld_0 = 100 - MathAbs(iWPR(NULL, 0, l_period_24, li_108));
      lda_100[li_108][0] = li_108;
      lda_100[li_108][1] = ld_0;
      ld_84 = 0;
      ld_92 = 0;
      ld_8 = 0;
      if (ld_0 < ld_40) {
         for (int li_64 = 1; lda_100[li_108 + li_64][1] >= ld_40 && lda_100[li_108 + li_64][1] <= ld_32; li_64++) {
         }
         if (lda_100[li_108 + li_64][1] > ld_32) {
            ld_8 = High[li_108] + ld_68 / 2.0;
            ld_84 = ld_8;
         }
      }
      if (ld_0 > ld_32) {
         for (li_64 = 1; lda_100[li_108 + li_64][1] >= ld_40 && lda_100[li_108 + li_64][1] <= ld_32; li_64++) {
         }
         if (lda_100[li_108 + li_64][1] < ld_40) {
            ld_8 = Low[li_108] - ld_68 / 2.0;
            ld_92 = ld_8;
         }
      }
      if (ld_92 != 0.0 && gi_88 == FALSE) {
         g_ibuf_80[li_108] = ld_92 - 1.0 * Point;
         gi_88 = TRUE;
         gi_92 = FALSE;
         if (li_112 <= 2 && Alert_Enabled) Alert(Symbol(), " ", Period(), "M  Golden Finger BUY ");
      }
      if (ld_84 != 0.0 && gi_92 == FALSE) {
         g_ibuf_84[li_108] = ld_84 + 1.0 * Point;
         gi_92 = TRUE;
         gi_88 = FALSE;
         if (li_112 <= 2 && Alert_Enabled) Alert(Symbol(), " ", Period(), "M   Golden Finger SELL ");
      }
   }
   return (0);
}